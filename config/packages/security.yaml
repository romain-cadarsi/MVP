security:
    encoders:
        App\Entity\Participant:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Participant
                property: email
        app_commercant_provider:
            entity:
                class: App\Entity\Commercant
                property: email
        chain_provider:
            chain:
                providers: [ 'app_user_provider', 'app_commercant_provider' ]
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            access_denied_handler: App\Security\AccessDeniedHandler
            anonymous: true
            lazy: true
            provider: chain_provider
            guard:
                authenticators:
                    - App\Security\CommercantAuthenticator
                    - App\Security\FacebookAuthenticator
                entry_point: App\Security\CommercantAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/campagne/*, roles: ROLE_COMMERCANT }
        - { path: /admin/*, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
